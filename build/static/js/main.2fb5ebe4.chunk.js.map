{"version":3,"sources":["components/Users.jsx","components/socket.js","components/Chat.jsx","components/Home.jsx","components/Login.jsx","reduxstore/thunk.js","App.js","reduxstore/reducer.js","reduxstore/middleware.js","reduxstore/store.js","index.js"],"names":["Users","props","SetGeneralChat","dispatch","type","payload","isChannel","chatName","receiverId","SetUserChat","user","name","id","messages","newMessages","immer","draft","className","onClick","this","allusers","map","Component","connect","state","currentChat","CurrentChat","socket","io","isloggedin","console","log","on","useState","message","setMessage","content","sender","push","fontSize","each","index","onSubmit","e","preventDefault","to","emit","value","onChange","target","placeholder","style","color","history","params","useParams","chat","setChat","people","setPeople","useEffect","msg","time","custom","msgData","Date","required","logged","setUser","getState","login","width","htmlFor","marginRight","href","exact","path","component","Chat","Login","reducerFun","general","action","middleware","applyMiddleware","store","next","thunk","createStore","reducer","ReactDOM","render","StrictMode","stateStore","document","getElementById"],"mappings":"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","file":"static/js/main.2fb5ebe4.chunk.js","sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport immer from \"immer\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport class Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  SetGeneralChat = () => {\r\n    // console.log(\"room set\")\r\n    this.props.dispatch({\r\n      type: \"CURRENT CHAT\",\r\n      payload: {\r\n        isChannel: true,\r\n        chatName: \"general\",\r\n        receiverId: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  SetUserChat = (user) => {\r\n    this.props.dispatch({\r\n      type: \"CURRENT CHAT\",\r\n      payload: {\r\n        isChannel: false,\r\n        chatName: user.name,\r\n        receiverId: user.id,\r\n      },\r\n    });\r\n    //  console.log(\"checkkkk......\",this.props.currentChat.chatName)\r\n    if (!this.props.messages[user.name]) {\r\n      // console.log(\"set krunnn....\")\r\n      let newMessages = immer(this.props.messages, (draft) => {\r\n        draft[user.name] = [];\r\n      });\r\n      this.props.dispatch({\r\n        type: \"MESSAGES\",\r\n        payload: newMessages,\r\n      });\r\n      // console.log(\"user set\",newMessages)\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"inbox_people\">\r\n          <div className=\"headind_srch\">\r\n            <div className=\"recent_heading\">\r\n              <h4>Group</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"inbox_chat\">\r\n            <div className=\"chat_list\" onClick={this.SetGeneralChat}>\r\n              <div className=\"chat_people\">\r\n                <div className=\"chat_img\">\r\n                  {\" \"}\r\n                  <AccountCircleIcon />{\" \"}\r\n                </div>\r\n                <div className=\"chat_ib\">\r\n                  <h5>\r\n                    General <span className=\"chat_date\">0</span>\r\n                  </h5>\r\n                  <p>Messages on this receives by everyone</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"headind_srch\">\r\n              <div className=\"recent_heading\">\r\n                <h4>Online</h4>\r\n              </div>\r\n            </div>\r\n            {this.props?.allusers?.map((user) => {\r\n              if (this.props.user != user.name) {\r\n                return (\r\n                  <div\r\n                    className=\"chat_list\"\r\n                    key={user.id}\r\n                    onClick={() => this.SetUserChat(user)}\r\n                  >\r\n                    <div className=\"chat_people\">\r\n                      <div className=\"chat_img\">\r\n                        {\" \"}\r\n                        <AccountCircleIcon />{\" \"}\r\n                      </div>\r\n                      <div className=\"chat_ib\">\r\n                        <h5>\r\n                          {user.name} <span className=\"chat_date\">0</span>\r\n                        </h5>\r\n                        <p>ID: {user.id}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(function (state, props) {\r\n  return {\r\n    user: state?.user,\r\n    allusers: state?.allusers,\r\n    messages: state?.messages,\r\n    currentChat: state?.CurrentChat,\r\n  };\r\n})(Users);\r\n","import io from 'socket.io-client'\r\nconst socket = io('http://localhost:8080')\r\nexport default socket","import React, { useEffect, useRef, useState } from \"react\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"./socket\";\r\nimport immer from \"immer\";\r\nimport ScrollMePlease from \"react-scrollable-feed\";\r\n\r\n// const socketRef = useRef()\r\n\r\nfunction Chat(props) {\r\n  console.log(\"yrssss\", props?.messages);\r\n  socket.on(\"newuser\", (allusers) => {\r\n    console.log(\"asdasdasdsadasdasd\", props);\r\n    props.dispatch({\r\n      type: \"USERS\",\r\n      payload: allusers,\r\n    });\r\n  });\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  socket.on(\"new-client\", (allusers) => {\r\n    console.log(\"new online user found.....\", allusers);\r\n    props.dispatch({\r\n      type: \"USERS\",\r\n      payload: allusers,\r\n    });\r\n  });\r\n  socket.on(\"new message\", ({ content, sender, chatName }) => {\r\n    const newMessages = immer(props.messages, (draft) => {\r\n      if (draft[chatName]) {\r\n        draft[chatName].push({ content, sender });\r\n      } else {\r\n        draft[chatName] = [{ content, sender }];\r\n      }\r\n    });\r\n    // console.log(\"new message received\",newMessages)\r\n    props.dispatch({\r\n      type: \"MESSAGES\",\r\n      payload: newMessages,\r\n    });\r\n  });\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      content: message,\r\n      to: props.currentChat.isChannel\r\n        ? props.currentChat.chatName\r\n        : props.currentChat.receiverId,\r\n      sender: props.user,\r\n      chatName: props.currentChat.chatName,\r\n      isChannel: props.currentChat.isChannel,\r\n    };\r\n    socket.emit(\"send message\", payload);\r\n    const newMessages = immer(props.messages, (draft) => {\r\n      draft[props.currentChat.chatName].push({\r\n        sender: props.user,\r\n        content: message,\r\n      });\r\n    });\r\n    props.dispatch({\r\n      type: \"MESSAGES\",\r\n      payload: newMessages,\r\n    });\r\n    setMessage(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h3 className=\" text-center\">Welcome {props.user}</h3>\r\n        <div className=\"messaging\">\r\n          <div className=\"inbox_msg\">\r\n            <Users />\r\n            <div className=\"mesgs\">\r\n              <h4>\r\n                {\" \"}\r\n                <AccountCircleIcon fontSize={\"large\"} />\r\n                {props?.currentChat?.chatName}\r\n              </h4>\r\n              <div className=\"msg_history\">\r\n                <ScrollMePlease>\r\n                  {props?.messages[props?.currentChat.chatName]\r\n                    ? props?.messages[props.currentChat.chatName].map(\r\n                        (each, index) => {\r\n                          if (each.sender === props?.user) {\r\n                            return (\r\n                              <div className=\"outgoing_msg\">\r\n                                <div className=\"sent_msg\">\r\n                                  <p>{each.content}</p>\r\n                                  <span className=\"time_date\">\r\n                                    {\" \"}\r\n                                    {each.sender}\r\n                                  </span>{\" \"}\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <div className=\"incoming_msg\">\r\n                                <div className=\"incoming_msg_img\">\r\n                                  <AccountCircleIcon />\r\n                                </div>\r\n                                <div className=\"received_msg\">\r\n                                  <div className=\"received_withd_msg\">\r\n                                    <p>{each.content}</p>\r\n                                    <span className=\"time_date\">\r\n                                      {\" \"}\r\n                                      {each.sender}\r\n                                    </span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          }\r\n                        }\r\n                      )\r\n                    : \" \"}\r\n                </ScrollMePlease>\r\n              </div>\r\n              <div className=\"type_msg\">\r\n                <div className=\"input_msg_write\">\r\n                  <form onSubmit={sendMessage}>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"write_msg\"\r\n                      name=\"msg\"\r\n                      value={message}\r\n                      onChange={(e) => setMessage(e.target.value)}\r\n                      placeholder=\"Type a message\"\r\n                    />\r\n                    <button className=\"msg_send_btn\">\r\n                      <SendIcon style={{ color: \"#fff\" }} />\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    user: state?.user,\r\n    messages: state?.messages,\r\n    allusers: state?.allusers,\r\n    isloggedin: state?.isloggedin,\r\n    currentChat: state?.CurrentChat,\r\n  };\r\n})(Chat);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport { useParams } from \"react-router\";\r\nconst socket = io(\"http://localhost:7000\");\r\nfunction Chat(props) {\r\n  if (props.isloggedin != true) {\r\n    props.history.push(\"/\");\r\n  }\r\n  console.log(\"chatssss\", props);\r\n  const params = useParams();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n  console.log(\"chatttttsssss\", chat);\r\n  useEffect(() => {\r\n    socket.on(\"new-client\", (user) => {\r\n      console.log(\"new online user found.....\", user);\r\n      setPeople(user);\r\n    });\r\n\r\n    socket.on(\"message\", (payload) => {\r\n      setChat([...chat, payload]);\r\n    });\r\n  });\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (props.custom) {\r\n      console.log(\"parmas\", params.id);\r\n      console.log(message);\r\n      const msgData = {\r\n        msg: message,\r\n        id: props.user.id,\r\n        time: new Date(),\r\n        to: params.id,\r\n      };\r\n      socket.emit(\"custom-message\", msgData);\r\n    } else {\r\n      console.log(message);\r\n      const msgData = {\r\n        msg: message,\r\n        id: props.user.id,\r\n        time: new Date(),\r\n      };\r\n      socket.emit(\"message\", msgData);\r\n    }\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h3 className=\" text-center\">Welcome {props?.user}</h3>\r\n        <div className=\"messaging\">\r\n          <div className=\"inbox_msg\">\r\n            <Users people={people} />\r\n            <div className=\"mesgs\">\r\n              <h4> {\"Public\"}</h4>\r\n              <div className=\"msg_history\">\r\n                {chat.map((msg) => {\r\n                  if (msg.id === props.user.id) {\r\n                    return (\r\n                      <div className=\"outgoing_msg\" key={msg.id}>\r\n                        <div className=\"sent_msg\">\r\n                          <p>{msg.msg}</p>\r\n                          <span className=\"time_date\"> {msg.time}</span>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <div className=\"incoming_msg\" key={msg.id}>\r\n                        <div className=\"incoming_msg_img\">\r\n                          <AccountCircleIcon />\r\n                        </div>\r\n                        <div className=\"received_msg\">\r\n                          <div className=\"received_withd_msg\">\r\n                            <p> {msg.msg}</p>\r\n                            <span className=\"time_date\">{msg.time}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n              <div className=\"type_msg\">\r\n                <div className=\"input_msg_write\">\r\n                  <form onSubmit={sendMessage}>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"message\"\r\n                      placeholder=\"Type message\"\r\n                      value={message}\r\n                      onChange={(e) => {\r\n                        setMessage(e.target.value);\r\n                      }}\r\n                      required\r\n                    ></input>\r\n                    <button className=\"msg_send_btn\">\r\n                      <SendIcon style={{ color: \"#fff\" }} />\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    user: state?.user,\r\n    isloggedin: state?.isloggedin,\r\n  };\r\n})(Chat);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"./socket\";\r\nimport { login } from \"../reduxstore/thunk\";\r\nimport immer from \"immer\";\r\nfunction Login(props) {\r\n  const [user, setUser] = useState();\r\n  // const [yourID, setYourID] = useState()\r\n  // console.log(\"login props\",props)\r\n  function joinCallback(messages, room) {\r\n    console.log(\"aaaa\", messages, room);\r\n    const newMessages = immer(messages, (draft) => {\r\n      draft[room] = room;\r\n    });\r\n    props.dispatch({\r\n      type: \"MESSAGE\",\r\n      payload: newMessages,\r\n    });\r\n  }\r\n\r\n  let submitHandle = (e) => {\r\n    e.preventDefault();\r\n    socket.emit(\"join\", user);\r\n    socket.emit(\"join room\", \"general\");\r\n    props.dispatch(login(user));\r\n    // socket.emit(\"Join\",userData)\r\n\r\n    props.history.push(\"/chat\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6\">\r\n          <form onSubmit={submitHandle} style={{ width: 500 }}>\r\n            <h2 className=\"text-center\">Hop In</h2>\r\n            <label htmlFor=\"Username\" style={{ fontSize: 20, marginRight: 10 }}>\r\n              Username:{\" \"}\r\n            </label>\r\n            <input\r\n              onChange={(e) => setUser(e.target.value)}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <br />\r\n            <button className=\"bth btn-dark form-control\">Join</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(function (state, props) {\r\n  return {\r\n    logged: state?.isloggedin,\r\n    messages: state?.messages,\r\n  };\r\n})(Login);\r\n","export function login (user){\r\n    return function(dispatch, getState){\r\n        // dispatch({\r\n        //     type: \"CURRENT CHAT\",\r\n        //     payload: {\r\n        //       isChannel: true,\r\n        //       chatName: \"general\",\r\n        //       receiverId: \"\"\r\n        //     }\r\n        //   })\r\n          dispatch({\r\n            type:\"ENTER\",\r\n            payload: user\r\n        })\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport \"./App.css\";\r\nimport Chat from \"./components/Chat\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport { BrowserRouter, Route, useHistory } from \"react-router-dom\";\r\n\r\nfunction App(props) {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-dark bg-dark p-2 \">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          WebChat\r\n        </a>\r\n      </nav>\r\n      <BrowserRouter>\r\n        <Route\r\n          exact\r\n          path=\"/chat\"\r\n          component={props.isloggedin ? Chat : Login}\r\n        ></Route>\r\n        <Route exact path=\"/ChatApplication\" component={Login}></Route>\r\n      </BrowserRouter>\r\n      {/* <Home/> */}\r\n      {/* {\r\n          props.isloggedin?  <Home/> :  <Login/> \r\n        } */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(function (state, props) {\r\n  console.log(\"state\", state);\r\n  return {\r\n    isloggedin: state?.isloggedin,\r\n  };\r\n})(App);\r\n","import React from 'react'\r\n\r\nconst reducerFun = (state = {messages : {general: []}}, action) => {\r\n    switch(action.type){\r\n        case \"ENTER\":{ \r\n            console.log(\"hit meeeee\",action)\r\n            state = {...state}\r\n            state[\"isloggedin\"] = true \r\n            state[\"user\"] = action.payload\r\n            state['CurrentChat'] = {\r\n                isChannel: true,\r\n                chatName: \"general\",\r\n                receiverId: \"\"\r\n              }\r\n            return state\r\n        }\r\n        case \"CURRENT CHAT\":{\r\n            state = {...state}\r\n            state['CurrentChat'] = action.payload\r\n            // console.log(\"ressducer....\",state[\"CurrentChat\"])\r\n            return state\r\n        }\r\n        case \"MESSAGES\": {\r\n            console.log(\"hahahhhaa\",action)\r\n            state = {...state}\r\n            state['messages'] = action.payload\r\n            return state\r\n        }\r\n        case \"USERS\": {\r\n            state = {...state}\r\n            state[\"allusers\"] = action.payload\r\n            return state\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default reducerFun\r\n","export function FirstMiddleWare(store) {\r\n  return function (next) {\r\n    return function (action) {};\r\n  };\r\n} //ES6\r\nexport let logger = store=>next=>action=>{\r\n\r\n    // console.log(\"Before Action \" , action.type ,store.getState())\r\n    var result = next(action)\r\n    // console.log(\"After Action store state is\" , store.getState())\r\n    return result\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport reducer from './reducer'\r\nimport {logger} from \"./middleware\"\r\nimport thunk from 'redux-thunk'\r\n\r\nvar middleware = applyMiddleware(logger, thunk)\r\n\r\nexport default createStore(reducer,middleware)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\nimport stateStore from './reduxstore/store'\r\nimport {Provider} from 'react-redux'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <Provider store={stateStore}>\r\n    <App />\r\n  </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}