{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\WebChat\\\\src\\\\components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport socket from \"./socket\";\nimport { login } from \"../reduxstore/thunk\";\nimport immer from \"immer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [user, setUser] = useState(); // const [yourID, setYourID] = useState()\n  // console.log(\"login props\",props)\n\n  function joinCallback(messages, room) {\n    console.log(\"aaaa\", messages, room);\n    const newMessages = immer(messages, draft => {\n      draft[room] = room;\n    });\n    props.dispatch({\n      type: \"MESSAGE\",\n      payload: newMessages\n    });\n  }\n\n  let submitHandle = e => {\n    e.preventDefault();\n    socket.emit(\"join\", user);\n    socket.emit(\"join room\", \"general\");\n    props.dispatch(login(user)); // socket.emit(\"Join\",userData)\n\n    props.history.push(\"/chat\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandle,\n          style: {\n            width: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center\",\n            children: \"Hop In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Username\",\n            style: {\n              fontSize: 20,\n              marginRight: 10\n            },\n            children: [\"Username:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setUser(e.target.value),\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bth btn-dark form-control\",\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"kGLk6m4BT90iK1d91zRYm0C2usk=\");\n\n_c = Login;\nexport default connect(function (state, props) {\n  return {\n    logged: state === null || state === void 0 ? void 0 : state.isloggedin,\n    messages: state === null || state === void 0 ? void 0 : state.messages\n  };\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/React/WebChat/src/components/Login.jsx"],"names":["React","useEffect","useState","connect","socket","login","immer","Login","props","user","setUser","joinCallback","messages","room","console","log","newMessages","draft","dispatch","type","payload","submitHandle","e","preventDefault","emit","history","push","width","fontSize","marginRight","target","value","state","logged","isloggedin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport socket from \"./socket\";\r\nimport { login } from \"../reduxstore/thunk\";\r\nimport immer from \"immer\";\r\nfunction Login(props) {\r\n  const [user, setUser] = useState();\r\n  // const [yourID, setYourID] = useState()\r\n  // console.log(\"login props\",props)\r\n  function joinCallback(messages, room) {\r\n    console.log(\"aaaa\", messages, room);\r\n    const newMessages = immer(messages, (draft) => {\r\n      draft[room] = room;\r\n    });\r\n    props.dispatch({\r\n      type: \"MESSAGE\",\r\n      payload: newMessages,\r\n    });\r\n  }\r\n\r\n  let submitHandle = (e) => {\r\n    e.preventDefault();\r\n    socket.emit(\"join\", user);\r\n    socket.emit(\"join room\", \"general\");\r\n    props.dispatch(login(user));\r\n    // socket.emit(\"Join\",userData)\r\n\r\n    props.history.push(\"/chat\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6\">\r\n          <form onSubmit={submitHandle} style={{ width: 500 }}>\r\n            <h2 className=\"text-center\">Hop In</h2>\r\n            <label htmlFor=\"Username\" style={{ fontSize: 20, marginRight: 10 }}>\r\n              Username:{\" \"}\r\n            </label>\r\n            <input\r\n              onChange={(e) => setUser(e.target.value)}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <br />\r\n            <button className=\"bth btn-dark form-control\">Join</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(function (state, props) {\r\n  return {\r\n    logged: state?.isloggedin,\r\n    messages: state?.messages,\r\n  };\r\n})(Login);\r\n"]},"metadata":{},"sourceType":"module"}