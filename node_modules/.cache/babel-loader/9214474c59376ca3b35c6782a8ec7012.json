{"ast":null,"code":"import _toConsumableArray from\"C:/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import AccountCircleIcon from\"@material-ui/icons/AccountCircle\";import SendIcon from\"@material-ui/icons/Send\";import Users from\"./Users\";import{connect}from\"react-redux\";import io from\"socket.io-client\";import{useParams}from\"react-router\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var socket=io(\"http://localhost:7000\");function Chat(props){if(props.isloggedin!=true){props.history.push(\"/\");}console.log(\"chatssss\",props);var params=useParams();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),chat=_useState4[0],setChat=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),people=_useState6[0],setPeople=_useState6[1];console.log(\"chatttttsssss\",chat);useEffect(function(){socket.on(\"new-client\",function(user){console.log(\"new online user found.....\",user);setPeople(user);});socket.on(\"message\",function(payload){setChat([].concat(_toConsumableArray(chat),[payload]));});});var sendMessage=function sendMessage(e){e.preventDefault();if(props.custom){console.log(\"parmas\",params.id);console.log(message);var msgData={msg:message,id:props.user.id,time:new Date(),to:params.id};socket.emit(\"custom-message\",msgData);}else{console.log(message);var _msgData={msg:message,id:props.user.id,time:new Date()};socket.emit(\"message\",_msgData);}setMessage(\"\");};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\" text-center\",children:[\"Welcome \",props===null||props===void 0?void 0:props.user]}),/*#__PURE__*/_jsx(\"div\",{className:\"messaging\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inbox_msg\",children:[/*#__PURE__*/_jsx(Users,{people:people}),/*#__PURE__*/_jsxs(\"div\",{className:\"mesgs\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\" \",\"Public\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"msg_history\",children:chat.map(function(msg){if(msg.id===props.user.id){return/*#__PURE__*/_jsx(\"div\",{className:\"outgoing_msg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sent_msg\",children:[/*#__PURE__*/_jsx(\"p\",{children:msg.msg}),/*#__PURE__*/_jsxs(\"span\",{className:\"time_date\",children:[\" \",msg.time]}),\" \"]})},msg.id);}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"incoming_msg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"incoming_msg_img\",children:/*#__PURE__*/_jsx(AccountCircleIcon,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"received_msg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"received_withd_msg\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\" \",msg.msg]}),/*#__PURE__*/_jsx(\"span\",{className:\"time_date\",children:msg.time})]})})]},msg.id);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"type_msg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"input_msg_write\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendMessage,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"message\",placeholder:\"Type message\",value:message,onChange:function onChange(e){setMessage(e.target.value);},required:true}),/*#__PURE__*/_jsx(\"button\",{className:\"msg_send_btn\",children:/*#__PURE__*/_jsx(SendIcon,{style:{color:\"#fff\"}})})]})})})]})]})})]})});}export default connect(function(state,props){return{user:state===null||state===void 0?void 0:state.user,isloggedin:state===null||state===void 0?void 0:state.isloggedin};})(Chat);","map":{"version":3,"sources":["C:/React/WebChat/src/components/Home.jsx"],"names":["React","useEffect","useRef","useState","AccountCircleIcon","SendIcon","Users","connect","io","useParams","socket","Chat","props","isloggedin","history","push","console","log","params","message","setMessage","chat","setChat","people","setPeople","on","user","payload","sendMessage","e","preventDefault","custom","id","msgData","msg","time","Date","to","emit","map","target","value","color","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport { useParams } from \"react-router\";\r\nconst socket = io(\"http://localhost:7000\");\r\nfunction Chat(props) {\r\n  if (props.isloggedin != true) {\r\n    props.history.push(\"/\");\r\n  }\r\n  console.log(\"chatssss\", props);\r\n  const params = useParams();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n  console.log(\"chatttttsssss\", chat);\r\n  useEffect(() => {\r\n    socket.on(\"new-client\", (user) => {\r\n      console.log(\"new online user found.....\", user);\r\n      setPeople(user);\r\n    });\r\n\r\n    socket.on(\"message\", (payload) => {\r\n      setChat([...chat, payload]);\r\n    });\r\n  });\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (props.custom) {\r\n      console.log(\"parmas\", params.id);\r\n      console.log(message);\r\n      const msgData = {\r\n        msg: message,\r\n        id: props.user.id,\r\n        time: new Date(),\r\n        to: params.id,\r\n      };\r\n      socket.emit(\"custom-message\", msgData);\r\n    } else {\r\n      console.log(message);\r\n      const msgData = {\r\n        msg: message,\r\n        id: props.user.id,\r\n        time: new Date(),\r\n      };\r\n      socket.emit(\"message\", msgData);\r\n    }\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h3 className=\" text-center\">Welcome {props?.user}</h3>\r\n        <div className=\"messaging\">\r\n          <div className=\"inbox_msg\">\r\n            <Users people={people} />\r\n            <div className=\"mesgs\">\r\n              <h4> {\"Public\"}</h4>\r\n              <div className=\"msg_history\">\r\n                {chat.map((msg) => {\r\n                  if (msg.id === props.user.id) {\r\n                    return (\r\n                      <div className=\"outgoing_msg\" key={msg.id}>\r\n                        <div className=\"sent_msg\">\r\n                          <p>{msg.msg}</p>\r\n                          <span className=\"time_date\"> {msg.time}</span>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <div className=\"incoming_msg\" key={msg.id}>\r\n                        <div className=\"incoming_msg_img\">\r\n                          <AccountCircleIcon />\r\n                        </div>\r\n                        <div className=\"received_msg\">\r\n                          <div className=\"received_withd_msg\">\r\n                            <p> {msg.msg}</p>\r\n                            <span className=\"time_date\">{msg.time}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n              <div className=\"type_msg\">\r\n                <div className=\"input_msg_write\">\r\n                  <form onSubmit={sendMessage}>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"message\"\r\n                      placeholder=\"Type message\"\r\n                      value={message}\r\n                      onChange={(e) => {\r\n                        setMessage(e.target.value);\r\n                      }}\r\n                      required\r\n                    ></input>\r\n                    <button className=\"msg_send_btn\">\r\n                      <SendIcon style={{ color: \"#fff\" }} />\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    user: state?.user,\r\n    isloggedin: state?.isloggedin,\r\n  };\r\n})(Chat);\r\n"]},"metadata":{},"sourceType":"module"}