{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\WebChat\\\\src\\\\components\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Users from \"./Users\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:7000\");\n\nfunction Chat(props) {\n  _s();\n\n  if (props.isloggedin != true) {\n    props.history.push(\"/\");\n  }\n\n  console.log(\"chatssss\", props);\n  const params = useParams();\n  const [message, setMessage] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [people, setPeople] = useState([]);\n  console.log(\"chatttttsssss\", chat);\n  useEffect(() => {\n    socket.on(\"new-client\", user => {\n      console.log(\"new online user found.....\", user);\n      setPeople(user);\n    });\n    socket.on(\"message\", payload => {\n      setChat([...chat, payload]);\n    });\n  });\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (props.custom) {\n      console.log(\"parmas\", params.id);\n      console.log(message);\n      const msgData = {\n        msg: message,\n        id: props.user.id,\n        time: new Date(),\n        to: params.id\n      };\n      socket.emit(\"custom-message\", msgData);\n    } else {\n      console.log(message);\n      const msgData = {\n        msg: message,\n        id: props.user.id,\n        time: new Date()\n      };\n      socket.emit(\"message\", msgData);\n    }\n\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \" text-center\",\n        children: [\"Welcome \", props === null || props === void 0 ? void 0 : props.user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"messaging\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inbox_msg\",\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            people: people\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mesgs\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\" \", \"Public\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"msg_history\",\n              children: chat.map(msg => {\n                if (msg.id === props.user.id) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"outgoing_msg\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"sent_msg\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: msg.msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        class: \"time_date\",\n                        children: [\" \", msg.time]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 27\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 25\n                    }, this)\n                  }, msg.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"incoming_msg\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"incoming_msg_img\",\n                      children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"received_msg\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"received_withd_msg\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\" \", msg.msg]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 86,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          class: \"time_date\",\n                          children: msg.time\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 87,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 25\n                    }, this)]\n                  }, msg.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 23\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"type_msg\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"input_msg_write\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: sendMessage,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"message\",\n                    placeholder: \"Type message\",\n                    value: message,\n                    onChange: e => {\n                      setMessage(e.target.value);\n                    },\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"msg_send_btn\",\n                    children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                      style: {\n                        color: \"#fff\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"juH5Uklo0Dxkw0cV54CUQ3A0ilY=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default connect((state, props) => {\n  return {\n    user: state === null || state === void 0 ? void 0 : state.user,\n    isloggedin: state === null || state === void 0 ? void 0 : state.isloggedin\n  };\n})(Chat);\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/React/WebChat/src/components/Home.jsx"],"names":["React","useEffect","useRef","useState","AccountCircleIcon","SendIcon","Users","connect","io","useParams","socket","Chat","props","isloggedin","history","push","console","log","params","message","setMessage","chat","setChat","people","setPeople","on","user","payload","sendMessage","e","preventDefault","custom","id","msgData","msg","time","Date","to","emit","map","target","value","color","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport { useParams } from \"react-router\";\r\nconst socket = io(\"http://localhost:7000\");\r\nfunction Chat(props) {\r\n  if (props.isloggedin != true) {\r\n    props.history.push(\"/\");\r\n  }\r\n  console.log(\"chatssss\", props);\r\n  const params = useParams()\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n  const [people, setPeople] = useState([]);\r\n  console.log(\"chatttttsssss\", chat);\r\n  useEffect(() => {\r\n\r\n    socket.on(\"new-client\", (user) => {\r\n      console.log(\"new online user found.....\", user);\r\n      setPeople(user);\r\n    });\r\n\r\n    socket.on(\"message\", (payload) => {\r\n      setChat([...chat, payload]);\r\n    });\r\n  });\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (props.custom) {\r\n      console.log(\"parmas\",params.id)\r\n      console.log(message);\r\n      const msgData = {\r\n      msg: message,\r\n      id: props.user.id,\r\n      time: new Date(),\r\n      to: params.id\r\n    };\r\n    socket.emit(\"custom-message\", msgData);\r\n\r\n    } else {\r\n      console.log(message);\r\n      const msgData = {\r\n        msg: message,\r\n        id: props.user.id,\r\n        time: new Date(),\r\n      };\r\n      socket.emit(\"message\", msgData);\r\n    }\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"container\">\r\n        <h3 class=\" text-center\">Welcome {props?.user}</h3>\r\n        <div class=\"messaging\">\r\n          <div class=\"inbox_msg\">\r\n            <Users people={people} />\r\n            <div class=\"mesgs\">\r\n            <h4> {\"Public\"}</h4>\r\n              <div class=\"msg_history\">\r\n                \r\n                {chat.map((msg) => {\r\n                  if (msg.id === props.user.id) {\r\n                    return (\r\n                      <div class=\"outgoing_msg\" key={msg.id}>\r\n                        <div class=\"sent_msg\">\r\n                          <p>{msg.msg}</p>\r\n                          <span class=\"time_date\"> {msg.time}</span>{\" \"}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <div class=\"incoming_msg\" key={msg.id}>\r\n                        <div class=\"incoming_msg_img\">\r\n                          <AccountCircleIcon />\r\n                        </div>\r\n                        <div class=\"received_msg\">\r\n                          <div class=\"received_withd_msg\">\r\n                            <p> {msg.msg}</p>\r\n                            <span class=\"time_date\">{msg.time}</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n              <div class=\"type_msg\">\r\n                <div class=\"input_msg_write\">\r\n                  <form onSubmit={sendMessage}>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"message\"\r\n                      placeholder=\"Type message\"\r\n                      value={message}\r\n                      onChange={(e) => {\r\n                        setMessage(e.target.value);\r\n                      }}\r\n                      required\r\n                    ></input>\r\n                    <button class=\"msg_send_btn\">\r\n                      <SendIcon style={{ color: \"#fff\" }} />\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect((state, props) => {\r\n  return {\r\n    user: state?.user,\r\n    isloggedin: state?.isloggedin,\r\n  };\r\n})(Chat);\r\n"]},"metadata":{},"sourceType":"module"}