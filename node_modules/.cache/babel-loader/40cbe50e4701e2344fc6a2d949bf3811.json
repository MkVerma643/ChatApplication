{"ast":null,"code":"import _classCallCheck from\"C:/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// import React, { useEffect, useState } from \"react\";\nimport AccountCircleIcon from\"@material-ui/icons/AccountCircle\";import{connect}from\"react-redux\";import{Link}from\"react-router-dom\";import immer from\"immer\";import React,{Component}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Users=/*#__PURE__*/function(_Component){_inherits(Users,_Component);var _super=_createSuper(Users);function Users(props){var _this;_classCallCheck(this,Users);_this=_super.call(this,props);_this.SetGeneralChat=function(){// console.log(\"room set\")\n_this.props.dispatch({type:\"CURRENT CHAT\",payload:{isChannel:true,chatName:\"general\",receiverId:\"\"}});};_this.SetUserChat=function(user){_this.props.dispatch({type:\"CURRENT CHAT\",payload:{isChannel:false,chatName:user.name,receiverId:user.id}});//  console.log(\"checkkkk......\",this.props.currentChat.chatName)\nif(!_this.props.messages[user.name]){// console.log(\"set krunnn....\")\nvar newMessages=immer(_this.props.messages,function(draft){draft[user.name]=[];});_this.props.dispatch({type:\"MESSAGES\",payload:newMessages});// console.log(\"user set\",newMessages)\n}};return _this;}_createClass(Users,[{key:\"render\",value:function render(){var _this$props,_this$props$allusers,_this2=this;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"inbox_people\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"headind_srch\",children:/*#__PURE__*/_jsx(\"div\",{className:\"recent_heading\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Group\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"inbox_chat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat_list\",onClick:this.SetGeneralChat,children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat_people\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat_img\",children:[\" \",/*#__PURE__*/_jsx(AccountCircleIcon,{}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat_ib\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[\"General \",/*#__PURE__*/_jsx(\"span\",{className:\"chat_date\",children:\"0\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Messages on this receives by everyone\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"headind_srch\",children:/*#__PURE__*/_jsx(\"div\",{className:\"recent_heading\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Online\"})})}),(_this$props=this.props)===null||_this$props===void 0?void 0:(_this$props$allusers=_this$props.allusers)===null||_this$props$allusers===void 0?void 0:_this$props$allusers.map(function(user){if(_this2.props.user!=user.name){return/*#__PURE__*/_jsx(\"div\",{className:\"chat_list\",onClick:function onClick(){return _this2.SetUserChat(user);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat_people\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat_img\",children:[\" \",/*#__PURE__*/_jsx(AccountCircleIcon,{}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat_ib\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[user.name,\" \",/*#__PURE__*/_jsx(\"span\",{className:\"chat_date\",children:\"0\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"ID: \",user.id]})]})]})},user.id);}})]})]})});}}]);return Users;}(Component);export default connect(function(state,props){return{user:state===null||state===void 0?void 0:state.user,allusers:state===null||state===void 0?void 0:state.allusers,messages:state===null||state===void 0?void 0:state.messages,currentChat:state===null||state===void 0?void 0:state.CurrentChat};})(Users);","map":{"version":3,"sources":["C:/React/WebChat/src/components/Users.jsx"],"names":["AccountCircleIcon","connect","Link","immer","React","Component","Users","props","SetGeneralChat","dispatch","type","payload","isChannel","chatName","receiverId","SetUserChat","user","name","id","messages","newMessages","draft","allusers","map","state","currentChat","CurrentChat"],"mappings":"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","sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport immer from \"immer\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport class Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  SetGeneralChat = () => {\r\n    // console.log(\"room set\")\r\n    this.props.dispatch({\r\n      type: \"CURRENT CHAT\",\r\n      payload: {\r\n        isChannel: true,\r\n        chatName: \"general\",\r\n        receiverId: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  SetUserChat = (user) => {\r\n    this.props.dispatch({\r\n      type: \"CURRENT CHAT\",\r\n      payload: {\r\n        isChannel: false,\r\n        chatName: user.name,\r\n        receiverId: user.id,\r\n      },\r\n    });\r\n    //  console.log(\"checkkkk......\",this.props.currentChat.chatName)\r\n    if (!this.props.messages[user.name]) {\r\n      // console.log(\"set krunnn....\")\r\n      let newMessages = immer(this.props.messages, (draft) => {\r\n        draft[user.name] = [];\r\n      });\r\n      this.props.dispatch({\r\n        type: \"MESSAGES\",\r\n        payload: newMessages,\r\n      });\r\n      // console.log(\"user set\",newMessages)\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"inbox_people\">\r\n          <div className=\"headind_srch\">\r\n            <div className=\"recent_heading\">\r\n              <h4>Group</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"inbox_chat\">\r\n            <div className=\"chat_list\" onClick={this.SetGeneralChat}>\r\n              <div className=\"chat_people\">\r\n                <div className=\"chat_img\">\r\n                  {\" \"}\r\n                  <AccountCircleIcon />{\" \"}\r\n                </div>\r\n                <div className=\"chat_ib\">\r\n                  <h5>\r\n                    General <span className=\"chat_date\">0</span>\r\n                  </h5>\r\n                  <p>Messages on this receives by everyone</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"headind_srch\">\r\n              <div className=\"recent_heading\">\r\n                <h4>Online</h4>\r\n              </div>\r\n            </div>\r\n            {this.props?.allusers?.map((user) => {\r\n              if (this.props.user != user.name) {\r\n                return (\r\n                  <div\r\n                    className=\"chat_list\"\r\n                    key={user.id}\r\n                    onClick={() => this.SetUserChat(user)}\r\n                  >\r\n                    <div className=\"chat_people\">\r\n                      <div className=\"chat_img\">\r\n                        {\" \"}\r\n                        <AccountCircleIcon />{\" \"}\r\n                      </div>\r\n                      <div className=\"chat_ib\">\r\n                        <h5>\r\n                          {user.name} <span className=\"chat_date\">0</span>\r\n                        </h5>\r\n                        <p>ID: {user.id}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(function (state, props) {\r\n  return {\r\n    user: state?.user,\r\n    allusers: state?.allusers,\r\n    messages: state?.messages,\r\n    currentChat: state?.CurrentChat,\r\n  };\r\n})(Users);\r\n"]},"metadata":{},"sourceType":"module"}