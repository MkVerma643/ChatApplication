{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\WebChat\\\\src\\\\components\\\\Users.jsx\";\n// import React, { useEffect, useState } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport immer from 'immer';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.SetGeneralChat = () => {\n      // console.log(\"room set\")\n      this.props.dispatch({\n        type: \"CURRENT CHAT\",\n        payload: {\n          isChannel: true,\n          chatName: \"general\",\n          receiverId: \"\"\n        }\n      });\n    };\n\n    this.SetUserChat = user => {\n      this.props.dispatch({\n        type: \"CURRENT CHAT\",\n        payload: {\n          isChannel: false,\n          chatName: user.name,\n          receiverId: user.id\n        }\n      }); //  console.log(\"checkkkk......\",this.props.currentChat.chatName)\n\n      if (!this.props.messages[user.name]) {\n        // console.log(\"set krunnn....\")\n        let newMessages = immer(this.props.messages, draft => {\n          draft[user.name] = [];\n        });\n        this.props.dispatch({\n          type: \"MESSAGES\",\n          payload: newMessages\n        }); // console.log(\"user set\",newMessages)\n      }\n    };\n  }\n\n  render() {\n    var _this$props, _this$props$allusers;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"inbox_people\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"headind_srch\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"recent_heading\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inbox_chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"chat_list\",\n            onClick: this.SetGeneralChat,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"chat_people\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"chat_img\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 27\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"chat_ib\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"General \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"chat_date\",\n                    children: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Messages on this receives by everyone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"headind_srch\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"recent_heading\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Online\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$allusers = _this$props.allusers) === null || _this$props$allusers === void 0 ? void 0 : _this$props$allusers.map(user => {\n            if (this.props.user != user.name) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"chat_list\",\n                onClick: () => this.SetUserChat(user),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"chat_people\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"chat_img\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 27\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"chat_ib\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: [user.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        class: \"chat_date\",\n                        children: \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"ID: \", user.id]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this)\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\nexport default connect(function (state, props) {\n  return {\n    user: state === null || state === void 0 ? void 0 : state.user,\n    allusers: state === null || state === void 0 ? void 0 : state.allusers,\n    messages: state === null || state === void 0 ? void 0 : state.messages,\n    currentChat: state === null || state === void 0 ? void 0 : state.CurrentChat\n  };\n})(Users);","map":{"version":3,"sources":["C:/React/WebChat/src/components/Users.jsx"],"names":["AccountCircleIcon","connect","Link","immer","React","Component","Users","constructor","props","SetGeneralChat","dispatch","type","payload","isChannel","chatName","receiverId","SetUserChat","user","name","id","messages","newMessages","draft","render","allusers","map","state","currentChat","CurrentChat"],"mappings":"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","sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport immer from 'immer'\r\nimport React, { Component } from 'react'\r\n\r\nexport class Users extends Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n   SetGeneralChat = () => {\r\n    // console.log(\"room set\")\r\n    this.props.dispatch({\r\n      type: \"CURRENT CHAT\",\r\n      payload: {\r\n        isChannel: true,\r\n        chatName: \"general\",\r\n        receiverId: \"\"\r\n      }\r\n    })\r\n  }\r\n\r\n   SetUserChat = user => {\r\n    this.props.dispatch({\r\n      type: \"CURRENT CHAT\",\r\n      payload: {\r\n        isChannel: false,\r\n        chatName: user.name,\r\n        receiverId: user.id\r\n      }\r\n    })\r\n    //  console.log(\"checkkkk......\",this.props.currentChat.chatName)\r\n    if(!this.props.messages[user.name]){\r\n      // console.log(\"set krunnn....\")\r\n      let newMessages = immer(this.props.messages, draft => {\r\n        draft[user.name] = []\r\n      })\r\n      this.props.dispatch({\r\n        type: \"MESSAGES\",\r\n        payload: newMessages\r\n      })\r\n      // console.log(\"user set\",newMessages)\r\n    }\r\n   \r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n      <div class=\"inbox_people\">\r\n        <div class=\"headind_srch\">\r\n          <div class=\"recent_heading\">\r\n            <h4>Group</h4>\r\n          </div>\r\n        </div>\r\n        <div class=\"inbox_chat\">\r\n        <div class=\"chat_list\" onClick={this.SetGeneralChat}>\r\n                      <div class=\"chat_people\">\r\n                        <div class=\"chat_img\">\r\n                          {\" \"}\r\n                          <AccountCircleIcon />{\" \"}\r\n                        </div>\r\n                        <div class=\"chat_ib\">\r\n                          <h5>\r\n                            General <span class=\"chat_date\">0</span>\r\n                          </h5>\r\n                          <p>Messages on this receives by everyone</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"headind_srch\">\r\n          <div class=\"recent_heading\">\r\n            <h4>Online</h4>\r\n          </div>\r\n        </div>\r\n          {this.props?.allusers?.map((user) => {\r\n                if (this.props.user != user.name) {\r\n                  return (\r\n                    <div class=\"chat_list\" key={user.id} onClick={() => this.SetUserChat(user)}>\r\n                      <div class=\"chat_people\">\r\n                        <div class=\"chat_img\">\r\n                          {\" \"}\r\n                          <AccountCircleIcon />{\" \"}\r\n                        </div>\r\n                        <div class=\"chat_ib\">\r\n                          <h5>\r\n                            {user.name} <span class=\"chat_date\">0</span>\r\n                          </h5>\r\n                          <p>ID: {user.id}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n              })\r\n            }\r\n        </div>\r\n      </div>\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(function (state, props) {\r\n  return {\r\n    user: state?.user,\r\n    allusers:state?.allusers,\r\n    messages:state?.messages,\r\n    currentChat: state?.CurrentChat\r\n  };\r\n})(Users);\r\n"]},"metadata":{},"sourceType":"module"}